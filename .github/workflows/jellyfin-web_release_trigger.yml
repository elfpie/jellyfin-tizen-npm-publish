name: Scheduled Jellyfin Tizen Build & Release

on:
  # Runs at 01:00 UTC every day
  schedule:
    - cron: '0 1 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository files
        uses: actions/checkout@v3

      # STEP 1: Check for the latest release in this repository
      - name: Get current latest release
        id: latest-release
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: ${{ github.repository_owner }} # Uses the owner of your forked repo
          repo: ${{ github.event.repository.name }} # Uses the name of your forked repo
          excludes: prerelease, draft

      # STEP 2: Check for the latest official Jellyfin-web release
      - name: Get Latest Jellyfin-web release
        id: latest-jellyfin-web
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          owner: jellyfin
          repo: jellyfin-web
          excludes: prerelease, draft

      # The following steps only run if a new jellyfin-web release is found
      - name: Clone jellyfin-web source code
        if: steps.latest-release.outputs.release != steps.latest-jellyfin-web.outputs.release
        uses: sudosubin/git-clone-action@v1.0.1
        with:
          repository: 'jellyfin/jellyfin-web'
          platform: 'github'
          path: './jellyfin-web'
          ref: ${{ steps.latest-jellyfin-web.outputs.release }}

      - name: Setup Node.js environment
        if: steps.latest-release.outputs.release != steps.latest-jellyfin-web.outputs.release
        uses: actions/setup-node@v3.0.0
        with:
          node-version: '>=14'

      - name: Build jellyfin-web from source
        if: steps.latest-release.outputs.release != steps.latest-jellyfin-web.outputs.release
        run: |
          cd jellyfin-web
          SKIP_PREPARE=1 npm ci --no-audit
          USE_SYSTEM_FONTS=1 npm run build:production
          
      - name: Clone jellyfin-tizen source code
        if: steps.latest-release.outputs.release != steps.latest-jellyfin-web.outputs.release
        uses: sudosubin/git-clone-action@v1.0.1
        with:
          repository: 'jellyfin/jellyfin-tizen'
          platform: 'github'
          path: 'jellyfin-tizen'

      # All your custom modifications are applied here
      - name: Modify jellyfin-tizen/package.json
        if: steps.latest-release.outputs.release != steps.latest-jellyfin-web.outputs.release
        uses: jaywcjlove/github-action-package@main
        with:
          path: 'jellyfin-tizen/package.json'
          data: |
            {
              "name": "@elfpie/jellyfin-tizen",
              "packageType": "app",
              "appName": "Jellyfin",
              "appPath": "index.html",
              "version": "${{ steps.latest-jellyfin-web.outputs.release }}",
              "keys": [
                "MediaPlayPause", "MediaPlay", "MediaPause", "MediaStop",
                "MediaTrackPrevious", "MediaTrackNext", "MediaRewind", "MediaFastForward"
              ]
            }

      - name: Set tizen-adapter.js app version
        if: steps.latest-release.outputs.release != steps.latest-jellyfin-web.outputs.release
        uses: htsnvhoang/find-replace-multiple@master
        with:
          finds: |
            version: 'DEVELOPMENT'
          replaces: |
            version: '${{ steps.latest-jellyfin-web.outputs.release }}'
          include: "tizen-adapter.js"
          separator: "___"
            
      - name: Enable TrueHD Audio
        if: steps.latest-release.outputs.release != steps.latest-jellyfin-web.outputs.release
        uses: htsnvhoang/find-replace-multiple@master
        with:
          finds: |
            return profileBuilder({ enableMkvProgressive: false, enableSsaRender: true });
          replaces: |
            return profileBuilder({ enableMkvProgressive: false, enableSsaRender: true, supportsTrueHd: true });
          include: "jellyfin-tizen/tizen.js"
          separator: "___"

      - name: Include tizen-adapter.js in the app
        if: steps.latest-release.outputs.release != steps.latest-jellyfin-web.outputs.release
        uses: htsnvhoang/find-replace-multiple@master
        with:
          finds: |
            webapis.setAttribute('src', '$WEBAPIS/webapis/webapis.js');
          replaces: |
            webapis.setAttribute('src', '../tizen-adapter.js');
          include: "jellyfin-tizen/gulpfile.babel.js"
          separator: "___"

      - name: Inject skip-intro-button.js in the app
        if: steps.latest-release.outputs.release != steps.latest-jellyfin-web.outputs.release
        uses: htsnvhoang/find-replace-multiple@master
        with:
          finds: |
            injectTarget.insertBefore(tizen, apploader);
          replaces: |
            injectTarget.insertBefore(tizen, apploader);

            // inject skip-intro-button.js
            const skipIntro = this.createElement('script');
            skipIntro.setAttribute('src', 'https://cdn.jsdelivr.net/gh/jumoog/intro-skipper/ConfusedPolarBear.Plugin.IntroSkipper/Configuration/inject.js');
            skipIntro.setAttribute('defer', '');
            injectTarget.insertBefore(skipIntro, apploader);
          include: "jellyfin-tizen/gulpfile.babel.js"
          separator: "___"

      # This is the key change: It uses the locally built jellyfin-web files
      - name: Build jellyfin-tizen with local web files
        if: steps.latest-release.outputs.release != steps.latest-jellyfin-web.outputs.release
        run: |
          cp tizen-adapter.js jellyfin-tizen/
          cd jellyfin-tizen
          rm .gitignore
          JELLYFIN_WEB_DIR=../jellyfin-web/dist npm ci --no-audit

      - name: Publish new @elfpie/jellyfin-tizen package version
        if: steps.latest-release.outputs.release != steps.latest-jellyfin-web.outputs.release
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ./jellyfin-tizen
          access: public

      - name: Release Build Result to GitHub
        if: steps.latest-release.outputs.release != steps.latest-jellyfin-web.outputs.release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.latest-jellyfin-web.outputs.release }}
          body: "New build of Jellyfin for Tizen based on jellyfin-web version ${{ steps.latest-jellyfin-web.outputs.release }}."
